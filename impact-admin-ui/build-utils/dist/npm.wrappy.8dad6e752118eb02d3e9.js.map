{"version":3,"sources":["webpack:///./node_modules/wrappy/wrappy.js"],"names":["module","exports","wrappy","fn","cb","TypeError","Object","keys","forEach","k","wrapper","args","Array","arguments","length","i","ret","apply","this"],"mappings":"+EAKAA,EAAAC,QACA,SAAAC,EAAAC,EAAAC,GACA,GAAAD,GAAAC,EAAA,OAAAF,EAAAC,EAAAD,CAAAE,GAEA,sBAAAD,EACA,UAAAE,UAAA,yBAEAC,OAAAC,KAAAJ,GAAAK,QAAA,SAAAC,GACAC,EAAAD,GAAAN,EAAAM,KAGA,OAAAC,EAEA,SAAAA,IAEA,IADA,IAAAC,EAAA,IAAAC,MAAAC,UAAAC,QACAC,EAAA,EAAmBA,EAAAJ,EAAAG,OAAiBC,IACpCJ,EAAAI,GAAAF,UAAAE,GAEA,IAAAC,EAAAb,EAAAc,MAAAC,KAAAP,GACAP,EAAAO,IAAAG,OAAA,GAMA,MALA,mBAAAE,OAAAZ,GACAE,OAAAC,KAAAH,GAAAI,QAAA,SAAAC,GACAO,EAAAP,GAAAL,EAAAK,KAGAO","file":"npm.wrappy.8dad6e752118eb02d3e9.js","sourcesContent":["// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n"],"sourceRoot":""}