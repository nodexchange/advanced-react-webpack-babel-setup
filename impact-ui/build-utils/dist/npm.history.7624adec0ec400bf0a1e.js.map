{"version":3,"sources":["webpack:///./node_modules/history/esm/history.js"],"names":["__webpack_require__","d","__webpack_exports__","createBrowserHistory","createHashHistory","createMemoryHistory","createLocation","locationsAreEqual","createPath","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","resolve_pathname__WEBPACK_IMPORTED_MODULE_1__","value_equal__WEBPACK_IMPORTED_MODULE_2__","tiny_invariant__WEBPACK_IMPORTED_MODULE_3__","addLeadingSlash","path","charAt","stripLeadingSlash","substr","stripBasename","prefix","RegExp","test","hasBasename","length","stripTrailingSlash","slice","location","pathname","search","hash","state","key","currentLocation","hashIndex","indexOf","searchIndex","parsePath","undefined","Object","decodeURI","e","URIError","a","b","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","callback","result","appendListener","fn","isActive","listener","apply","arguments","push","filter","item","notifyListeners","_len","args","Array","_key","forEach","canUseDOM","window","document","createElement","getConfirmation","message","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","props","ua","globalHistory","canUseHistory","navigator","userAgent","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","Math","random","toString","transitionManager","setState","nextState","handlePopState","event","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","n","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","href","pushState","prevIndex","nextKeys","replace","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashChangeEvent$1","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","getHashPath","substring","replaceHashPath","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","lastIndexOf","pushHashPath","nextPaths","clamp","lowerBound","upperBound","min","max","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entries","index","map","entry","nextIndex","nextEntries","splice","canGo"],"mappings":"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","file":"npm.history.7624adec0ec400bf0a1e.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n"],"sourceRoot":""}